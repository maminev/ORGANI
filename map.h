#ifndef MAP_H_INCLUDED
#define MAP_H_INCLUDED
#include <SFML\Graphics.hpp>
#include <iostream>
#include <vector>

const int iMap = 20;//размер карты высота
const int jMap = 30;//размер карты ширина
int TileMap[iMap][jMap];




/*void MakeTileMapArr(){

    int integer = 0;
for (int i= 0; i<iMap; i++) {
  for (int j= 0; j<jMap; j++)
       {
         //if (j == 0 || j == 29) { std::cout << (TileMap [i][j] = 1); ++integer;}
         if (j == 0 || j == 29 || i == 0 || i == 19){ std::cout << (TileMap [i][j] = 1); ++integer;}
         else std::cout << (TileMap [i][j] = 0); ++integer;
       }
    std::cout << "всего в строке  " << integer<<  std::endl;
    integer = 0;

    };

 TileMap [5][5] = 1;
 TileMap [17][5] = 4;
 TileMap [18][28] = 4;

}*/


sf::String MapOne[iMap] = {
	"000000000000000000000DDD000000",
	"0---------0--------0-----0---0",
	"0---------0--------0-----0---0",
	"0-----c---0------------------0",
	"0---------0----------a-------0",
	"0--c------0------b-----------0",
	"0---------0------------------0",
	"0----------------------c-----0",
	"0---------------a-----m------0",
	"0-----b---c------------------0",
	"0----------------------------0",
	"0------------b-----a---------0",
	"0----------------------------0",
	"0-------------c--------------0",
	"0----a-----------------0000000",
	"0----------------------------0",
	"0----m---------------b-------0",
	"0----------m------------m----0",
	"0----------------------------0",
	"000000000000000000000000000000",
};

sf::String MapTwo[iMap] = {
	"000000000000000000000000000000",
	"0----------------------------0",
	"0--------------------b-------0",
	"0-----c----------------------0",
	"0--------------------a-------0",
	"0--c-------------b-----------0",
	"0----------------------------0",
	"0----------------------c---000",
	"0---------------a-----m------D",
	"0-----b---c------------------D",
	"0----------------------------D",
	"0------------b-----a---------D",
	"0----------------------------D",
	"0-------------c--------------D",
	"0----a---------------------000",
	"0----------------------------0",
	"0----m-----------------------0",
	"0----------m-------0-----0---0",
	"0------------------0-----0---0",
	"000000000000000000000DDD000000",
};

sf::String MapThree[iMap] = {
	"000000000000000000000000000000",
	"0----------------------------0",
	"0--------------------b-------0",
	"0-----c----------------------0",
	"0--------------------a-------0",
	"0--c-------------b-----------0",
	"0----------------------------0",
	"000--------------------c-----0",
	"D---------------a-----m------0",
	"D-----b---c------------------0",
	"D----------------------------0",
	"D------------b-----a---------0",
	"D----------------------------0",
	"D-------------c--------------0",
	"000--a-----------------------0",
	"0----------------------------0",
	"0----m-----------------------0",
	"0----------m-------0-----0---0",
	"0------------------0-----0---0",
	"000000000000000000000DDD000000",
};

sf::String MapFoor[iMap] = {
	"000000000000000000000DDD000000",
	"0------0-----------0-----0---0",
	"0------0-----------0-b---0---0",
	"0-----c0---------------------0",
	"0------0-------------a-------0",
	"0--c---0---------b-----------0",
	"0----------------------------0",
	"0---------------0----0-c-----0",
	"0---------------0----0m------0",
	"0-----b---c-----0----0-------0",
	"0---------------000000-------0",
	"0------------b-----a---------0",
	"0000000000-------------------0",
	"0--------0----c--------------0",
	"0----a---000000--------------0",
	"0-------------0--------------0",
	"0----m---------------b-------0",
	"0----------m------------m----0",
	"0----------------------------0",
	"000000000000000000000000000000",
};



//STRARR - пусто, b банана, 0 глина, a яблоко, m мухомор, c вишня, M магнит, L рычаг лево, R рычаг право D door
//INTARR 0 пусто, 1 банана, 2 глина, 3 яблоко, 4 мухомор, 5 вишня, 6 магнит, 7 рычаг лево, 8 рычаг право 9 Door

void MakeTileMapArr(sf::String &MapArray)
        {


        for (int i = 0; i < iMap; i++)
		for (int j = 0; j < jMap; j++)
            {
			if (MapArray[i][j] == '0') TileMap [i][j] = 2;
			if (MapArray[i][j] == '-') TileMap [i][j] = 0;
			if (MapArray[i][j] == 'b') TileMap [i][j] = 1;
            if (MapArray[i][j] == 'a') TileMap [i][j] = 3;
			if (MapArray[i][j] == 'm') TileMap [i][j] = 4;
			if (MapArray[i][j] == 'c') TileMap [i][j] = 5;
            if (MapArray[i][j] == 'M') TileMap [i][j] = 6;
			if (MapArray[i][j] == 'L') TileMap [i][j] = 7;
            if (MapArray[i][j] == 'R') TileMap [i][j] = 8;
            if (MapArray[i][j] == 'D') TileMap [i][j] = 9;
            }
       }




/*        for (int i = 0; i < iMap; i++)
		for (int j = 0; j < jMap; j++)
            {
			if (MapOne[i][j] == '0') TileMap [i][j] = 2;
			if (MapOne[i][j] == '-') TileMap [i][j] = 0;
			if (MapOne[i][j] == 'b') TileMap [i][j] = 1;
            if (MapOne[i][j] == 'a') TileMap [i][j] = 3;
			if (MapOne[i][j] == 'm') TileMap [i][j] = 4;
			if (MapOne[i][j] == 'c') TileMap [i][j] = 5;
            if (MapOne[i][j] == 'M') TileMap [i][j] = 6;
			if (MapOne[i][j] == 'L') TileMap [i][j] = 7;
            if (MapOne[i][j] == 'R') TileMap [i][j] = 8;
            if (MapOne[i][j] == 'D') TileMap [i][j] = 9;
            }*/




#endif // MAP_H_INCLUDED
